{
    "_id": "parkhaus",
    "title": "Parkhaus",
    "abstract": "Simple Simulation of a Parking Garage",
    "description": "<p>This simple simulation of a parking garage is used in a software engineering course as a starting point. The tasks and exercises are for further development.</p><div class=\"small\">\n                <style type=\"text/css\">\n                  .param { color: #aa00ff; text-decoration: underline overline; }\n                </style>\n                <h3>Parkhaus-API</h3>\n                <h4>1. Serverseitige Konfiguration des Parkhaus-Clients</h4>\n                Beim Laden des Parkhaus-Clients sendet dieser folgenden HTTP-GET-Request an den Server:\n                <ul>\n                  <li><code>http://<b class=\"param\">Server</b>/<b class=\"param\">ServletRoute</b>?cmd=config&name=<b class=\"param\">ParkhausName</b></code></li>\n                </ul>\n                <p>Das Servlet unter der Route <b class=\"param\">ServletRoute</b> auf dem Server mit dem Namen <b class=\"param\">Server</b> wird damit aufgefordert, die Konfigurationsparameter für das Parkhaus mit dem Namen <b class=\"param\">ParkhausName</b> an den Client zu senden. Bitte ersetzen Sie die <b class=\"param\">in violett geschriebenen Parameter</b> durch Ihre eigenen Namen.</p>\n                <p>HTTP-Response ist daraufhin z.B.</p>\n                <ul>\n                  <li><code>20,6,24,100,10</code></li>\n                </ul>\n                Die Konfigurationsparameter darin sind:\n                <ol>\n                  <li>Maximale Anzahl der Autos im Parkhaus (20)</li>\n                  <li>Öffnungszeit (um 6:00 Uhr)</li>\n                  <li>Schließzeit (um 24:00 Uhr)</li>\n                  <li>Verzögerung beim Umschalten der Ampel in Millisekunden (100 msec)</li>\n                  <li>Preisfaktor (10)</li>\n                </ol>\n                Die Zahlen aus dem Beispiel sind die Default-Werte.\n\n                <h4>2. Serverseitige Speicherung der Autos im Parkhaus</h4>\n                Als nächstes sendet der Parkhaus-Client folgenden HTTP-GET-Request an den Server:\n                <ul>\n                  <li><code>http://<b class=\"param\">Server</b>/<b class=\"param\">ServletRoute</b>?cmd=cars&name=<b class=\"param\">ParkhausName</b></code></li>\n                </ul>\n                Dabei erwartet der Parkhaus-Client die Liste aller Autos, die jemals im Parkhaus waren oder noch sind. Die Liste ist im CSV-Format, d.h. alle Autos werden durch Komma getrennt. Jedes einzelne Auto wird in einem Format mit Schrägstrich ( Slash, \"/\" ) mit den Daten <code><b class=\"param\">Nr</b>/<b class=\"param\">Timer</b>/<b class=\"param\">Duration</b>/<b class=\"param\">Price</b>/<b class=\"param\">Hash</b>/<b class=\"param\">Color</b></code> dargestellt. Der <b class=\"param\">Timer</b> gibt die Anzahl der Millisekunden seit Unix-Geburt an (<a target=\"_blank\" href=\"https://de.wikipedia.org/wiki/Unixzeit\" rel=\"noopener\">Unix-Epoch-Zeit</a>). Die <b class=\"param\">Duration</b> ist die Anzahl der Millisekunden zwischen Einfahrt und Ausfahrt.\n                Auf diese Weise kann bei Neuladen der alte Zustand wieder hergestellt werden.\n\n                <h4>3. Enter</h4>\n                Bei jedem einfahrenden Auto sendet der Parkhaus-Client einen HTTP-POST-Request an den Server mit den Daten:\n                <ul>\n                  <li><code>enter,<b class=\"param\">Nr</b>,<b class=\"param\">Timer</b>,<b class=\"param\">Duration</b>,<b class=\"param\">Price</b>,<b class=\"param\">Hash</b>,<b class=\"param\">Color</b></code></li>\n                </ul>\n                <p>Falls ein Wert noch undefiniert ist, wird stattdessen ein Unterstrich ( Underscore, \"_\" ) eingefügt.</p>\n\n                <h4>4. Leave</h4>\n                Bei jedem ausfahrenden Auto sendet der Parkhaus-Client einen HTTP-POST-Request an den Server mit den Daten:\n                <ul>\n                  <li><code>leave,<b class=\"param\">Nr</b>,<b class=\"param\">Timer</b>,<b class=\"param\">Duration</b>,<b class=\"param\">Price</b>,<b class=\"param\">Hash</b>,<b class=\"param\">Color</b></code></li>\n                </ul>\n\n                <h4>5. Weitere HTTP-POST-Requests</h4>\n                Außerdem gibt es HTTP-POST-Requests\n                <ul>\n                  <li><code>full</code>, falls das Parkhaus voll ist</li>\n                  <li><code>closed</code>, falls das Parkhaus geschlossen ist</li>\n                  <li><code>change</code>, falls ein Input-Feld (z.B. Max) editiert wird.</li>\n                </ul>\n\n                <h4>6. Weitere HTTP-GET-Requests</h4>\n                Außerdem gibt es HTTP-GET-Requests bei den selbst-definerten Buttons, z.B. <code>sum</code> beim Summen-Button oder Chart-Button.\n\n                <h4>7. Optional: HTML Code serverseitig generieren und im Client einfügen</h4>\n                <p>Außerdem ist es möglich, serverseitig beliebigen HTML-Code zu erzeugen und gezielt an einer Stelle oder an mehreren Stellen im Parkhaus-Client einzufügen. Die Interpretation des serverseitig generierten Response Strings folgt folgendem Algorithmus:</p>\n                 <pre style=\"background-color:#ffffff;color:#000000;font-family:'Menlo';font-size:10.5pt;\"><span style=\"color:#000080;font-weight:bold;\">function </span><span style=\"font-style:italic;\">command_interpreter</span>( response_string, extra_span ){<br> <span style=\"color:#000080;font-weight:bold;\">if </span>( response_string.<span style=\"color:#7a7a43;\">indexOf</span>(<span style=\"color:#008000;font-weight:bold;\">'HTTP Status'</span>) &gt;= <span style=\"color:#0000ff;\">0 </span>){ <span style=\"color:#808080;font-style:italic;\">// error<br></span><span style=\"color:#808080;font-style:italic;\"> </span><span style=\"font-style:italic;\">show_error</span>( response_string );<br> } <span style=\"color:#000080;font-weight:bold;\">else </span>{ <span style=\"color:#808080;font-style:italic;\">// generic interpreter for server responses: Where? What? Params...<br></span><span style=\"color:#808080;font-style:italic;\"> </span><span style=\"color:#000080;font-weight:bold;\">const </span>[ <span style=\"color:#458383;\">selector</span>, <span style=\"color:#458383;\">command</span>, ...<span style=\"color:#458383;\">content </span>] = response_string.<span style=\"color:#7a7a43;\">split</span>(<span style=\"color:#008000;font-weight:bold;\">','</span>);<br> <span style=\"color:#000080;font-weight:bold;\">if </span>( <span style=\"color:#458383;\">main_elem </span>&amp;&amp; <span style=\"color:#0000ff;\">/^[A-Za-z_]\\w*$/</span>.<span style=\"color:#7a7a43;\">test</span>(<span style=\"color:#458383;\">selector</span>) &amp;&amp; <span style=\"color:#458383;\">main_elem</span>.<span style=\"color:#7a7a43;\">querySelector</span>( <span style=\"color:#458383;\">selector </span>) ){<br> <span style=\"color:#000080;font-weight:bold;\">if </span>( <span style=\"color:#458383;\">command </span>=== <span style=\"color:#008000;font-weight:bold;\">\"insertHTML\" </span>){<br> <span style=\"color:#458383;\">main_elem</span>.<span style=\"color:#7a7a43;\">querySelector</span>( <span style=\"color:#458383;\">selector </span>).<span style=\"color:#660e7a;font-weight:bold;\">innerHTML </span>= <span style=\"color:#458383;\">content</span>;<br> } <span style=\"color:#000080;font-weight:bold;\">else </span>{<br> <span style=\"color:#458383;\">main_elem</span>.<span style=\"color:#7a7a43;\">querySelector</span>( <span style=\"color:#458383;\">selector </span>).<span style=\"color:#660e7a;font-weight:bold;\">innerText </span>= <span style=\"color:#458383;\">content</span>;<br> }<br> } <span style=\"color:#000080;font-weight:bold;\">else if </span>( extra_span ) {<br> extra_span.<span style=\"color:#660e7a;font-weight:bold;\">innerHTML </span>= response_string;<br> } <span style=\"color:#000080;font-weight:bold;\">else </span>{<br> <span style=\"color:#000080;font-weight:bold;\">return </span>response_string;<br> }<br> }<br>}</pre>\n\n\n                <p>Z.B. bei einem Response <code>#abc,insertHTML,content</code> wird im Parkhaus-Client im Element mit der ID <code>abc</code> der Content <code>content</code> eingefügt. Der alte Inhalt wird überschrieben. Bei der Konfiguration des Parkhaus-Clients im <a target=\"_blank\" href=\"https://ccmjs.github.io/digital-maker-space/\" rel=\"noopener\">DMS</a> können Sie angeben, welche IDs Sie haben wollen.</p>\n\n              </div>",
    "icon": "https://ccmjs.github.io/mkaul-components/parkhaus/resources/icon.svg",
    "url": "https://ccmjs.github.io/mkaul-components/parkhaus/versions/ccm.parkhaus-6.0.2.js",
    "version": "6.0.2",
    "developer": "Manfred Kaul",
    "license": "MIT License",
    "website": "https://github.com/ccmjs/mkaul-components/",
    "ignore": {
        "demos": [
            {
                "title": "Demo",
                "config": [
                    "ccm.get",
                    "https://ccmjs.github.io/mkaul-components/parkhaus/resources/configs.js",
                    "demo"
                ]
            },
            {
                "title": "Configure your own server and butttons",
                "config": [
                    "ccm.get",
                    "https://ccmjs.github.io/mkaul-components/parkhaus/resources/configs.js",
                    "server"
                ]
            }
        ],
        "builder": [
            {
                "title": "Configure your own server and butttons",
                "url": "https://ccmjs.github.io/akless-components/app_builder/versions/ccm.app_builder-2.0.0.js",
                "config": {
                    "builder": [
                        "ccm.component",
                        "https://ccmjs.github.io/akless-components/submit/versions/ccm.submit-7.0.0.js",
                        {
                            "ignore.defaults": {

                                "name": "CarHome",
                                "server_url": "http://localhost:8080/DemoServlet6",

                                "Max":  20,
                                "open_from":  6,
                                "open_to":  24,
                                "delay":  100,
                                "simulation_speed":  10,

                                "html": {
                                    "main": {
                                        "inner": [
                                            { "tag": "h2", "inner": [
                                                "Autos im Parkhaus: &nbsp; ",
                                                { "tag": "span", "class": "counter", "inner": "0" },
                                                ", &nbsp; Max: &nbsp; ",
                                                { "tag": "input", "class": "Max", "type": "number", "min": 0, "value": 20, "oninput": "%oninput%" },
                                                " &nbsp; Öffnungszeiten von : &nbsp; ",
                                                { "tag": "input", "class": "open_from", "type": "number", "min": 0, "max": 24, "value": 6, "oninput": "%oninput%" },
                                                " &nbsp; bis: &nbsp; ",
                                                { "tag": "input", "class": "open_to", "type": "number", "min": 0, "max": 24, "value": 24, "oninput": "%oninput%" },
                                                " &nbsp; ",
                                                { "tag": "span", "class": "date" }

                                            ] },
                                            { "tag": "button", "class": "enter", "onclick": "%enter%", "inner": "Enter", "title": "Drive your car into the garage!" },
                                            " &nbsp; Ticket: ",
                                            { "tag": "span", "class": "ticket_hash" },
                                            { "tag": "span", "class": "extra_buttons" },
                                            { "tag": "span", "class": "extra_charts" },
                                            { "tag": "img", "class": "entry", "src": "%car%", "width": "202", "height": "74" },
                                            { "tag": "span", "class": "traffic_light" },
                                            { "tag": "img", "src": "%parking_garage%", "width": "250", "height": "235" },
                                            { "tag": "div", "inner": "Click car to exit:" },
                                            { "class": "garage" },
                                            { "tag": "img", "class": "exit", "src": "%empty%", "width": "202", "height": "74" },
                                            { "tag": "hr" },
                                            { "tag": "table", "inner": [
                                                { "tag": "tr", "inner": [ { "tag": "th", "inner": "Nr", "title": "Nr des Autos" }, { "tag": "th", "inner": "Von", "title": "Startzeit des Parkens" }, { "tag": "th", "inner": "Bis", "title": "Endzeit des Parkens" }, { "tag": "th", "inner": "Dauer", "title": "Wie lange war das Auto im Parkhaus?" }, { "tag": "th", "inner": "Ticket", "title": "Ticket Hash" }, { "tag": "th", "inner": "Preis", "title": "Parkgebühren" } ] }
                                            ] },
                                            { "tag": "div", "class": "errors", "style": "display: none;" }
                                        ]
                                    },
                                    "row": { "tag": "tr", "inner": [ { "tag": "td", "inner": "%nr%" }, { "tag": "td", "inner": "%von%" }, { "tag": "td", "inner": "%bis%" }, { "tag": "td", "inner": "%dauer%" }, { "tag": "td", "inner": "%ticket%" }, { "tag": "td", "inner": "%preis%" } ] },
                                    "extra_button_div": { "inner": [
                                        { "tag": "button", "class": "%extra_class%", "inner": "%extra_inner%", "title": "%extra_popup_title%" },
                                        { "tag": "span", "class": "%extra_class%" }
                                    ] },
                                    "extra_chart_div": { "inner": [
                                        { "tag": "button", "class": "%extra_class%", "inner": "%extra_inner%", "title": "%extra_popup_title%" },
                                        { "tag": "input", "class": "%extra_class%", "type": "checkbox" },
                                        { "tag": "div", "class": "%extra_class%" }
                                    ] }
                                },

                                "images": {
                                    "car": "https://ccmjs.github.io/mkaul-components/parkhaus/resources/car.png",
                                    "parking_garage": "https://ccmjs.github.io/mkaul-components/parkhaus/resources/parking_garage.png",
                                    "empty": "https://ccmjs.github.io/mkaul-components/parkhaus/resources/empty.png"
                                },

                                "messages": {
                                    "parkhaus_full": "Sorry, Parkhaus is full.",
                                    "parkhaus_closed": "Sorry, Parkhaus is closed."
                                },

                                "extra_buttons": [
                                    {
                                        "extra_class": "sum",
                                        "extra_inner": "Sum",
                                        "extra_popup_title": "Sum of all parking fees"
                                    }
                                ],

                                "extra_charts": [
                                    {
                                        "extra_class": "chart",
                                        "extra_inner": "Chart",
                                        "extra_popup_title": "Chart of all parking fees"
                                    }
                                ],

                                "traffic_light": {
                                    "tag": "svg", "viewBox": "0 0 200 500", "xmlns": "http://www.w3.org/2000/svg", "width": "40", "height": "100", "inner": [
                                        {
                                            "tag": "rect",
                                            "style": "fill: rgb(100, 86, 86);",
                                            "width": "200",
                                            "height": "500",
                                            "rx": "30",
                                            "ry": "30"
                                        },
                                        {
                                            "tag": "circle",
                                            "id": "green",
                                            "style": "fill: rgb(77, 251, 3);",
                                            "cx": "98.65",
                                            "cy": "407.68",
                                            "r": "70.2"
                                        },
                                        {
                                            "tag": "circle",
                                            "id": "yellow",
                                            "style": "fill: rgb(239, 251, 3);",
                                            "cx": "98.78",
                                            "cy": "247.42",
                                            "r": "70.2"
                                        },
                                        {
                                            "tag": "circle",
                                            "id": "red",
                                            "style": "fill: rgb(251, 3, 3);",
                                            "cx": "99.55",
                                            "cy": "81.53",
                                            "r": "70.2"
                                        }
                                    ]
                                },
                                "car": {
                                    "tag": "svg", "id": "%id%", "class": "car", "viewBox": "0 0 310 255", "xmlns": "http://www.w3.org/2000/svg", "inner": [
                                        {
                                            "tag": "g",
                                            "transform": "translate(2.441785,-204.56609)",
                                            "style": "fill:#000000;fill-opacity:1;stroke:none",
                                            "inner": [
                                                {
                                                    "tag": "path",
                                                    "style": "fill-opacity: 0.85; fill-rule: evenodd; paint-order: stroke; stroke: rgb(0, 0, 0); stroke-width: 8px; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 4; fill: %color%;",
                                                    "d": "m -53.582954,-415.35856 c -13.726061,-0.48561 -25.554278,3.95581 -32.848561,19.90697 l -26.336555,65.94442 c -19.18907,5.29042 -27.54259,19.22853 -27.98516,30.66415 l 0,86.34597 25.30617,0 0,29.05676 c -1.22633,27.69243 44.157018,28.76272 45.171926,-0.28851 l 0.535799,-28.52096 164.160378,0 0.535798,28.52096 c 1.014898,29.05121 46.439469,27.98094 45.213139,0.28851 l 0,-29.05676 25.26495,0 0,-86.34597 c -0.44257,-11.43562 -8.79607,-25.37375 -27.98516,-30.66415 l -26.33655,-65.94442 c -7.29428,-15.95113 -19.122506,-20.39255 -32.848559,-19.90697 l -131.847615,0 z m 3.008714,22.87447 c 1.148077,-0.006 2.358386,0.0326 3.585728,0.0824 l 119.070884,0.37094 c 10.897921,-0.25425 15.519886,3.3e-4 20.154262,10.30382 l 18.959016,51.10692 -197.50352,-0.24729 18.752943,-49.74682 c 2.924271,-9.95822 8.944151,-11.82604 16.980687,-11.87 l 0,3e-5 z m -41.462551,87.45878 c 11.803644,2e-5 21.39072,9.54587 21.39072,21.34951 0,11.80363 -9.587076,21.39072 -21.39072,21.39072 -11.803639,0 -21.390719,-9.58708 -21.390719,-21.39072 0,-11.80366 9.58708,-21.34951 21.390719,-21.34951 z m 209.950531,0 c 11.80364,-2e-5 21.3495,9.54587 21.3495,21.34951 0,11.80364 -9.54586,21.39072 -21.3495,21.39072 -11.80364,10e-6 -21.390719,-9.58708 -21.390719,-21.39072 0,-11.80364 9.587079,-21.34951 21.390719,-21.34951 z m -14.69214,-28.11863 0,0 z",
                                                    "transform": "matrix(0.9797897,0,0,0.9877946,140.46678,619.88975)",
                                                    "inner": {
                                                        "tag": "title",
                                                        "inner": "%tooltip%"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "tag": "rect",
                                            "style": "fill: rgb(216, 216, 216); paint-order: stroke; stroke: rgb(0, 0, 0); stroke-width: 8px;",
                                            "x": "100",
                                            "y": "134.69",
                                            "width": "111.26",
                                            "height": "44.79",
                                            "rx": "15",
                                            "ry": "15"
                                        },
                                        {
                                            "tag": "text",
                                            "text-anchor": "middle",
                                            "x": "150",
                                            "y": "170",
                                            "style": "white-space: pre; fill: rgb(51, 51, 51); font-size: 38px; text-align: center;",
                                            "inner": "%nr%"
                                        }
                                    ]
                                },

                                "hash": [ "ccm.load", { "url": "https://ccmjs.github.io/akless-components/modules/md5.mjs", "type": "module" } ],
                                "SALT": "123",

                                "chart": [ "ccm.component", "https://ccmjs.github.io/mkaul-components/plotly/versions/ccm.plotly-1.1.1.js" ],
                                "css": [ "ccm.load",  "https://kaul.inf.h-brs.de/data/ccmjs/mkaul-components/parkhaus/resources/default.css" ]
                            },
                            "json_builder": [
                                "ccm.component",
                                "https://ccmjs.github.io/akless-components/json_builder/versions/ccm.json_builder-1.3.0.js",
                                {
                                    "html.inner.1": "",
                                    "directly": true
                                }
                            ],
                            "entries": [
                                {
                                    "label": "Name of Parkhaus",
                                    "name": "name",
                                    "type": "text",
                                    "info": "Enter a name of the Parkhaus"
                                },
                                {
                                    "label": "Servlet URL",
                                    "name": "server_url",
                                    "type": "url",
                                    "info": "Enter URL of your Servlet to process all click events on the server side"
                                },
                                {
                                    "label": "Max",
                                    "name": "Max",
                                    "type": "number",
                                    "min": 1,
                                    "info": "Maximum number of cars in garage"
                                },
                                {
                                    "label": "Delay",
                                    "name": "delay",
                                    "type": "number",
                                    "min": 10,
                                    "info": "Delay between traffic light switches"
                                },
                                {
                                    "label": "Begin Time",
                                    "name": "open_from",
                                    "type": "number",
                                    "min": 0,
                                    "max": 24,
                                    "info": "Parkhaus is open from this hour"
                                },
                                {
                                    "label": "End Time",
                                    "name": "open_to",
                                    "type": "number",
                                    "min": 0,
                                    "max": 24,
                                    "info": "Parkhaus is open until this hour"
                                },
                                {
                                    "label": "Simulation Speed",
                                    "name": "simulation_speed",
                                    "type": "number",
                                    "info": "Ratio of Simulation Time versus Real Time"
                                },
                                {
                                    "label": "Extra Buttons",
                                    "type": "several",
                                    "info": "Configure List of extra buttons for your Parkhaus Client",
                                    "item": {
                                        "label": "Button %nr%",
                                        "name": "extra_buttons",
                                        "type": "json_builder",
                                        "info": "Structure of this extra button HTML space"
                                    }
                                },
                                {
                                    "label": "Extra Charts",
                                    "type": "several",
                                    "info": "Configure List of extra charts for your Parkhaus Client",
                                    "item": {
                                        "label": "Button %nr%",
                                        "name": "extra_charts",
                                        "type": "json_builder",
                                        "info": "Structure of this extra chart HTML space"
                                    }
                                },
                                {
                                    "name": "html",
                                    "type": "hidden"
                                },
                                {
                                    "name": "html.main",
                                    "type": "hidden"
                                },
                                {
                                    "name": "images",
                                    "type": "hidden"
                                },
                                {
                                    "label": "URL of car image",
                                    "name": "images.car",
                                    "type": "url",
                                    "info": "URL of image file (png,jpeg,svg, ...) for car"
                                },
                                {
                                    "label": "URL of garage image",
                                    "name": "images.parking_garage",
                                    "type": "url",
                                    "info": "URL of image file (png,jpeg,svg, ...) for Garage symbol"
                                },
                                {
                                    "label": "URL of empty image",
                                    "name": "images.empty",
                                    "type": "url",
                                    "info": "URL of image file (png,jpeg,svg, ...) for empty symbol"
                                },
                                {
                                    "name": "css",
                                    "type": "hidden"
                                },
                                {
                                    "label": "URL of CSS Layout",
                                    "name": "css.1",
                                    "type": "url",
                                    "info": "URL of CSS file for layouting the Parkhaus Client"
                                },
                                {
                                    "label": "HTML main structure",
                                    "name": "html.main",
                                    "type": "json_builder",
                                    "info": "Structure of main HTML"
                                },
                                {
                                    "label": "Row in Table",
                                    "name": "html.row",
                                    "type": "json_builder",
                                    "info": "Structure of Row in Table HTML"
                                },
                                {
                                    "label": "Extra Button HTML",
                                    "name": "html.extra_button_div",
                                    "type": "json_builder",
                                    "info": "Structure of Extra Button HTML document space"
                                },
                                {
                                    "label": "Extra Chart HTML",
                                    "name": "html.extra_chart_div",
                                    "type": "json_builder",
                                    "info": "Structure of Extra Chart HTML document space"
                                },
                                {
                                    "label": "Traffic light",
                                    "name": "traffic_light",
                                    "type": "json_builder",
                                    "info": "Structure of Traffic light SVG document space"
                                },
                                {
                                    "label": "Car",
                                    "name": "car",
                                    "type": "json_builder",
                                    "info": "Structure of Car SVG document space"
                                },
                                {
                                    "name": "chart",
                                    "type": "hidden"
                                },
                                {
                                    "label": "URL of Chart component",
                                    "name": "chart.1",
                                    "type": "url",
                                    "info": "URL of JavaScript file for the Chart component"
                                }
                            ]
                        }
                    ]
                }
            },
            {
                "title": "JSON Builder",
                "url": "https://ccmjs.github.io/akless-components/app_builder/versions/ccm.app_builder-2.0.0.js",
                "config": {
                    "builder": [
                        "ccm.component",
                        "https://ccmjs.github.io/akless-components/json_builder/versions/ccm.json_builder-1.3.0.js",
                        {
                            "html.inner.1": "",
                            "directly": true,
                            "data": [
                                "ccm.get",
                                "https://ccmjs.github.io/mkaul-components/parkhaus/resources/configs.js",
                                "server"
                            ],
                            "ignore.defaults": {

                                "name": "CarHome",
                                "server_url": "http://localhost:8080/DemoServlet6",

                                "Max":  20,
                                "open_from":  6,
                                "open_to":  24,
                                "delay":  100,
                                "simulation_speed":  10,

                                "html": {
                                    "main": {
                                        "inner": [
                                            { "tag": "h2", "inner": [
                                                "Autos im Parkhaus: &nbsp; ",
                                                { "tag": "span", "class": "counter", "inner": "0" },
                                                ", &nbsp; Max: &nbsp; ",
                                                { "tag": "input", "class": "Max", "type": "number", "min": 0, "value": 20, "oninput": "%oninput%" },
                                                " &nbsp; Öffnungszeiten von : &nbsp; ",
                                                { "tag": "input", "class": "open_from", "type": "number", "min": 0, "max": 24, "value": 6, "oninput": "%oninput%" },
                                                " &nbsp; bis: &nbsp; ",
                                                { "tag": "input", "class": "open_to", "type": "number", "min": 0, "max": 24, "value": 24, "oninput": "%oninput%" },
                                                " &nbsp; ",
                                                { "tag": "span", "class": "date" }

                                            ] },
                                            { "tag": "button", "class": "enter", "onclick": "%enter%", "inner": "Enter", "title": "Drive your car into the garage!" },
                                            " &nbsp; Ticket: ",
                                            { "tag": "span", "class": "ticket_hash" },
                                            { "tag": "span", "class": "extra_buttons" },
                                            { "tag": "span", "class": "extra_charts" },
                                            { "tag": "img", "class": "entry", "src": "%car%", "width": "202", "height": "74" },
                                            { "tag": "span", "class": "traffic_light" },
                                            { "tag": "img", "src": "%parking_garage%", "width": "250", "height": "235" },
                                            { "tag": "div", "inner": "Click car to exit:" },
                                            { "class": "garage" },
                                            { "tag": "img", "class": "exit", "src": "%empty%", "width": "202", "height": "74" },
                                            { "tag": "hr" },
                                            { "tag": "table", "inner": [
                                                { "tag": "tr", "inner": [ { "tag": "th", "inner": "Nr", "title": "Nr des Autos" }, { "tag": "th", "inner": "Von", "title": "Startzeit des Parkens" }, { "tag": "th", "inner": "Bis", "title": "Endzeit des Parkens" }, { "tag": "th", "inner": "Dauer", "title": "Wie lange war das Auto im Parkhaus?" }, { "tag": "th", "inner": "Ticket", "title": "Ticket Hash" }, { "tag": "th", "inner": "Preis", "title": "Parkgebühren" } ] }
                                            ] },
                                            { "tag": "div", "class": "errors", "style": "display: none;" }
                                        ]
                                    },
                                    "row": { "tag": "tr", "inner": [ { "tag": "td", "inner": "%nr%" }, { "tag": "td", "inner": "%von%" }, { "tag": "td", "inner": "%bis%" }, { "tag": "td", "inner": "%dauer%" }, { "tag": "td", "inner": "%ticket%" }, { "tag": "td", "inner": "%preis%" } ] },
                                    "extra_button_div": { "inner": [
                                        { "tag": "button", "class": "%extra_class%", "inner": "%extra_inner%", "title": "%extra_popup_title%" },
                                        { "tag": "span", "class": "%extra_class%" }
                                    ] },
                                    "extra_chart_div": { "inner": [
                                        { "tag": "button", "class": "%extra_class%", "inner": "%extra_inner%", "title": "%extra_popup_title%" },
                                        { "tag": "input", "class": "%extra_class%", "type": "checkbox" },
                                        { "tag": "div", "class": "%extra_class%" }
                                    ] }
                                },

                                "images": {
                                    "car": "https://ccmjs.github.io/mkaul-components/parkhaus/resources/car.png",
                                    "parking_garage": "https://ccmjs.github.io/mkaul-components/parkhaus/resources/parking_garage.png",
                                    "empty": "https://ccmjs.github.io/mkaul-components/parkhaus/resources/empty.png"
                                },

                                "messages": {
                                    "parkhaus_full": "Sorry, Parkhaus is full.",
                                    "parkhaus_closed": "Sorry, Parkhaus is closed."
                                },

                                "extra_buttons": [
                                    {
                                        "extra_class": "sum",
                                        "extra_inner": "Sum",
                                        "extra_popup_title": "Sum of all parking fees"
                                    }
                                ],

                                "extra_charts": [
                                    {
                                        "extra_class": "chart",
                                        "extra_inner": "Chart",
                                        "extra_popup_title": "Chart of all parking fees"
                                    }
                                ],

                                "traffic_light": {
                                    "tag": "svg", "viewBox": "0 0 200 500", "xmlns": "http://www.w3.org/2000/svg", "width": "40", "height": "100", "inner": [
                                        {
                                            "tag": "rect",
                                            "style": "fill: rgb(100, 86, 86);",
                                            "width": "200",
                                            "height": "500",
                                            "rx": "30",
                                            "ry": "30"
                                        },
                                        {
                                            "tag": "circle",
                                            "id": "green",
                                            "style": "fill: rgb(77, 251, 3);",
                                            "cx": "98.65",
                                            "cy": "407.68",
                                            "r": "70.2"
                                        },
                                        {
                                            "tag": "circle",
                                            "id": "yellow",
                                            "style": "fill: rgb(239, 251, 3);",
                                            "cx": "98.78",
                                            "cy": "247.42",
                                            "r": "70.2"
                                        },
                                        {
                                            "tag": "circle",
                                            "id": "red",
                                            "style": "fill: rgb(251, 3, 3);",
                                            "cx": "99.55",
                                            "cy": "81.53",
                                            "r": "70.2"
                                        }
                                    ]
                                },
                                "car": {
                                    "tag": "svg", "id": "%id%", "class": "car", "viewBox": "0 0 310 255", "xmlns": "http://www.w3.org/2000/svg", "inner": [
                                        {
                                            "tag": "g",
                                            "transform": "translate(2.441785,-204.56609)",
                                            "style": "fill:#000000;fill-opacity:1;stroke:none",
                                            "inner": [
                                                {
                                                    "tag": "path",
                                                    "style": "fill-opacity: 0.85; fill-rule: evenodd; paint-order: stroke; stroke: rgb(0, 0, 0); stroke-width: 8px; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 4; fill: %color%;",
                                                    "d": "m -53.582954,-415.35856 c -13.726061,-0.48561 -25.554278,3.95581 -32.848561,19.90697 l -26.336555,65.94442 c -19.18907,5.29042 -27.54259,19.22853 -27.98516,30.66415 l 0,86.34597 25.30617,0 0,29.05676 c -1.22633,27.69243 44.157018,28.76272 45.171926,-0.28851 l 0.535799,-28.52096 164.160378,0 0.535798,28.52096 c 1.014898,29.05121 46.439469,27.98094 45.213139,0.28851 l 0,-29.05676 25.26495,0 0,-86.34597 c -0.44257,-11.43562 -8.79607,-25.37375 -27.98516,-30.66415 l -26.33655,-65.94442 c -7.29428,-15.95113 -19.122506,-20.39255 -32.848559,-19.90697 l -131.847615,0 z m 3.008714,22.87447 c 1.148077,-0.006 2.358386,0.0326 3.585728,0.0824 l 119.070884,0.37094 c 10.897921,-0.25425 15.519886,3.3e-4 20.154262,10.30382 l 18.959016,51.10692 -197.50352,-0.24729 18.752943,-49.74682 c 2.924271,-9.95822 8.944151,-11.82604 16.980687,-11.87 l 0,3e-5 z m -41.462551,87.45878 c 11.803644,2e-5 21.39072,9.54587 21.39072,21.34951 0,11.80363 -9.587076,21.39072 -21.39072,21.39072 -11.803639,0 -21.390719,-9.58708 -21.390719,-21.39072 0,-11.80366 9.58708,-21.34951 21.390719,-21.34951 z m 209.950531,0 c 11.80364,-2e-5 21.3495,9.54587 21.3495,21.34951 0,11.80364 -9.54586,21.39072 -21.3495,21.39072 -11.80364,10e-6 -21.390719,-9.58708 -21.390719,-21.39072 0,-11.80364 9.587079,-21.34951 21.390719,-21.34951 z m -14.69214,-28.11863 0,0 z",
                                                    "transform": "matrix(0.9797897,0,0,0.9877946,140.46678,619.88975)",
                                                    "inner": {
                                                        "tag": "title",
                                                        "inner": "%tooltip%"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "tag": "rect",
                                            "style": "fill: rgb(216, 216, 216); paint-order: stroke; stroke: rgb(0, 0, 0); stroke-width: 8px;",
                                            "x": "100",
                                            "y": "134.69",
                                            "width": "111.26",
                                            "height": "44.79",
                                            "rx": "15",
                                            "ry": "15"
                                        },
                                        {
                                            "tag": "text",
                                            "text-anchor": "middle",
                                            "x": "150",
                                            "y": "170",
                                            "style": "white-space: pre; fill: rgb(51, 51, 51); font-size: 38px; text-align: center;",
                                            "inner": "%nr%"
                                        }
                                    ]
                                },

                                "hash": [ "ccm.load", { "url": "https://ccmjs.github.io/akless-components/modules/md5.mjs", "type": "module" } ],
                                "SALT": "123",

                                "chart": [ "ccm.component", "https://ccmjs.github.io/mkaul-components/plotly/versions/ccm.plotly-1.1.1.js" ],
                                "css": [ "ccm.load",  "https://kaul.inf.h-brs.de/data/ccmjs/mkaul-components/parkhaus/resources/default.css" ]
                            }
                        }
                    ]
                }
            }
        ]
    },
    "updated_at": "2019-05-09T19:11:02+01:00",
    "created_at": "2018-10-12T11:38:29+02:00",
    "_": {
        "creator": "mkaul2m",
        "realm": "hbrsinfkaul",
        "access": {
            "get": "all",
            "set": "creator",
            "del": "creator"
        }
    }
}